<Project Sdk="Microsoft.NET.Sdk.Web">
  <PropertyGroup>
    <TargetFramework>net9.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
    <DockerfileContext>..\..</DockerfileContext>
    <DockerComposeProjectPath>..\..\docker-compose.dcproj</DockerComposeProjectPath>
    <Company>IoTSharp</Company>
    <Authors>maikebing</Authors>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="Apache.IoTDB" />
    <PackageReference Include="Apache.IoTDB.Data" />
    <PackageReference Include="AspNetCore.HealthChecks.UI" />
    <PackageReference Include="AspNetCore.HealthChecks.UI.Client" />
    <PackageReference Include="AspNetCore.HealthChecks.UI.InMemory.Storage" />
    <PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\HealthChecks.Cassandra\HealthChecks.Cassandra.csproj">
      <Private>True</Private>
      <CopyLocalSatelliteAssemblies>True</CopyLocalSatelliteAssemblies>
    </ProjectReference>
    <ProjectReference Include="..\HealthChecks.InfluxDB\HealthChecks.InfluxDB.csproj">
      <CopyLocalSatelliteAssemblies>True</CopyLocalSatelliteAssemblies>
      <Private>True</Private>
    </ProjectReference>
    <ProjectReference Include="..\HealthChecks.IoTDB\HealthChecks.IoTDB.csproj">
      <Private>True</Private>
      <CopyLocalSatelliteAssemblies>True</CopyLocalSatelliteAssemblies>
    </ProjectReference>
    <ProjectReference Include="..\HealthChecks.NTPServer\HealthChecks.NTPServer.csproj" />
  </ItemGroup>
  <ProjectExtensions>
    <VisualStudio>
      <UserProperties appsettings_1json__JsonSchema="" />
    </VisualStudio>
  </ProjectExtensions>
</Project>